{% macro gridproduct(product, options=['carousel','image','details']) %}
	{% spaceless %}
	{% set product =  product|merge({'variant':product.product|values_in('variant')}) %}
	{% set product =  product|merge({'attributes':product.variant|values_in(['price','compare_price','save_price','save_percent','color'])}) %}
	{% import _self as this %}
	{% import "/_macros/base.html.twig" as base %}
	<div class="product" itemscope itemtype="http://schema.org/Product">        
		{% if 'image' in options %}
			{# Grab image based on color facets #}
			{# Old Behavior
			{% set img_url = product.thumbnail %}
			{% if product.attributes.color|length > 1 %}
				{% set current_colors = app.request.get.f.color|keys %}
				{% for variant in product.variant 
					if variant.status == 'active' and variant.color in current_colors and variant.images is not empty %}
						{% set img_url = variant.thumbnail %}
				{% endfor %}
			{% endif %}
			{% set secure =  app.url_asset | slice(0,5)  %}
			{% if secure == 'https' %}
			  {% set img_url = img_url | replace({'http:':'https:'}) %}
			{% endif %}
			#}
			{% if product.images is not empty %}
				{% set image_url = app.image.getImageUrl('product','thumbnail', product.images[0].id) %}
			{% else %}
				{% set image_url = "" %}
				{# Look for first variant with images, price>0 and has_stock #}
				{% for variant in product.variant
					  if variant.status == 'active' 
					  and variant.price>0 
					  and variant.has_stock 
					  and variant.images is not empty 
					  and image_url is empty %}
						  {% set image_url = app.image.getImageUrl('product','thumbnail', variant.images[0].id) %}
				{% endfor %}
			{% endif %}

			{# Begin product image #}               
			<div class="max-250 p-mini">
				<a href="{{app.url}}/product/{{product.slug}}">
					<div class="image-space">
						<img itemprop="image" alt="{{product.name}} Image" onerror="this.src='{{ app.url_asset }}/assets/images/product/image-250x250.jpg'" id="product-image-{{product.id}}" src="{{ image_url }}" class="img-responsive isd" data-image-source="{{ image_url }}" width="250" height="250">
						<div class="labels">
						{% for tag in product.tags %}
							{% if tag == 'new' %}
								<span class="label label-new">{{ tag|capitalize }}</span>
							{% elseif tag == 'sale' %}
								<span class="label label-sale">{{ tag|capitalize }}</span>
							{% elseif tag == 'popular' %}
								<span class="label label-hot">{{ tag|capitalize }}</span>
							{% else %}
								<span class="label label-feat">{{ tag|capitalize }}</span>
							{% endif %}
						{% endfor %}
						</div>
					</div>
				</a>
			</div>                            
			{# End product image #}

			{# There is no point in having a carousel without an image, so it is moved inside here #}
			{% if 'carousel' in options %}
				{# Begin image carousel insert #}
				{{ this.carousel(product) }}
				{# End image carousel insert #}
			{% endif %}
		{% endif %}
		{% if 'details' in options %}
			{# Begin product details #}
			<div class="product-details g">
				
				<a href="{{app.url}}/product/{{product.slug}}">
					<div class="brand"><span itemprop="brand">{{product.brand}}</span></div>
					<div class="product-name"><span itemprop="name">{{product.name}}</span></div>
				</a>
				
				{# Begin product description for google rich snippets, not showing in the preview! #}
				{% if product.description is not empty %}
					{% set full_description = product.description %}
						<div class="hidden"><span itemprop="description">{{full_description}}</span></div>
				{% endif %}

				{% set id = 0 %}
				{% for sku in product.variant %}
					{% set id = id + 1 %}
						<div class="sku-details hidden" id="div-sku-{{product.id}}"><strong>ITEM: </strong> #<span itemprop="sku">{{ product.variant[id].sku }}</span></div>
				{% endfor %} 
				{% set id = 0 %}
				{% for barcode in product.variant %}   
						<div class="hidden"><span itemprop="gtin12">{{ product.variant[id].barcode }}</span></div> 
				{% endfor %}      
				{# End product descriptiong for google rich snippets, not showing in the preview! #}      

				<span itemprop="offers" itemscope itemtype="http://schema.org/Offer">
					<div class="pricing g">
						{% if product.attributes.price %}
						<div class="price"><span itemprop="price">{{ this.price(product.attributes.price) }}</span></div>
						<meta itemprop="priceCurrency" content="USD" />
						{% endif %}
						{# if product.attributes.price.0 >= 100 %}
						<div class="price-per-month hidden-xs">
							<span data-tooltip data-toggle="tooltip" data-original-title="Spread payments over six months by selecting &quot;Checkout with Paypal&quot; on the Shopping Cart page. Then log in and apply for a &quot;Bill Me Later&quot; account.">{{ this.billmelater(product.attributes.price) }}</span>
						</div>
						{% endif #}
						{% if product.attributes.compare_price|max - product.attributes.price|max > 1 %}
						{% spaceless %}
						<ul class="list-inline pricing">
							<li class="price-regular">{{ this.price(product.attributes.compare_price) }}</li>
							<li class="percent">Save {{ this.saveprice(product.attributes.save_price) }} {{ this.savepercent(product.attributes.save_percent) }}</li>
						</ul>
						{% endspaceless %}
						{% endif %}
					</div>
				</span>
				{% set reviews = api.get('/productreview', { query:{ product_id: product.id,status:"active" } }) %}
				{% set review_score = reviews|average('score') %}
				{% if review_score > 0 %}
				<div itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
				<div class="reviews"> 
				<span itemprop="ratingValue">{{ base.rating( review_score ) }} {{ (review_score * 5)|number_format(1) }}</span>                 
					{% if reviews.num_total %}(<span itemprop="reviewCount">{{ reviews.num_total }}</span>)
					{% endif %}
				</div>
				</div>
				{% endif %}
			</div>
			{# End product details #}
		{% endif %}
	</div>
	{% endspaceless %}
{% endmacro %}

{% macro carousel(product) %}
{% spaceless %}
{# Begin image carousel #}
{% if product.attributes.color|length > 1 %}
	{% if product.variant is not empty %}
		{% set carouselHasNext = false %}
		<div class="color-carousel row row-thin hidden-sm hidden-xs">
			<div id="color-image-carousel-{{product.id}}" class="col-xs-10 col-thin carousel slide" data-ride="carousel">
				<div class="carousel-inner">
					<div class="item active">
						<div class="row row-thin">
						{% set colors = [] %}
						{% for item,child in product.variant if 
							child.status == 'active' 
							and child.price>0 
							and child.has_stock 
							and child.images is not empty
							and child.color not in colors %}
							{% set colors = colors|merge([child.color]) %}
							{% set image_url = app.image.getImageUrl('product','thumbnail', child.images[0].id) %}
							<div class="thumbnail col-xs-2 col-thin">
								<img onerror="this.src='{{ app.url_asset }}/assets/images/product/image-250x250.jpg'" src="{{ image_url }}" class="img-responsive" data-image-swap="product-image-{{product.id}}" data-image-swap-src="{{ image_url }}" width="250" height="250" alt="">
							</div>
							{% set carouselblock = carouselblock + 1 %}
							{% if carouselblock is divisibleby(6) and product.variant[(item + 1)] is defined %}
								{% set carouselHasNext = true %}
									</div>
								</div>
								<div class="item">
									<div class="row row-thin">
							{% endif %}
						{% endfor %}
						</div>
					</div>
				</div>
			</div>
			{% if carouselHasNext == true %}
			<div class="col-xs-2 col-thin">
				<a class="btn btn-xs btn-default" href="#color-image-carousel-{{product.id}}" data-slide="next">
					<span class="glyphicon glyphicon-chevron-right"></span>
				</a>
			</div>
			{% endif %}
		</div>
	{% endif %}
{% else %}
	<div class="empty-carousel hidden-sm hidden-xs"></div>
{% endif %}
{# End image carousel #}
{% endspaceless %}
{% endmacro %}

{% macro price(prices) %}
{% spaceless %}
	{% if prices is not iterable %}
		${{prices|number_format(2)}}
	{% else %}
		{% set min = prices[0] %}
		{% set max = prices[0] %}
		{% for price in prices %}
			{% set min = min > price ? price : min %}
			{% set max = max < price ? price : max %}
		{% endfor %}
		{% if min == max or min == 0 %}
			${{max|number_format(2)}}
		{% else %}
			${{min|number_format(2)}} - ${{max|number_format(2)}}
		{% endif %}
	{% endif %}
{% endspaceless %}
{% endmacro %}

{% macro billmelater(prices, text='per month*') %}
{% spaceless %}
	{% if prices is not iterable %}
		${{(prices/6)|number_format(2)}} {{text}}
	{% else %}
		{% set min = prices[0] %}
		{% set max = prices[0] %}
		{% for price in prices %}
			{% set min = min > price ? price : min %}
			{% set max = max < price ? price : max %}
		{% endfor %}
		{% if max >= 100 %}
			${{(max/6)|number_format(2)}} {{text}}
		{% endif %}
	{% endif %}
{% endspaceless %}
{% endmacro %}

{% macro saveprice(saveprices) %}
{% spaceless %}
	{% if saveprices is not iterable %}
		${{saveprices|number_format(2)}}
	{% else %}
		{% set max = saveprices[0] %}
		{% for price in saveprices %}
			{% set max = max < price ? price : max %}
		{% endfor %}
		{% if max > 1 %}
			${{max|number_format()}}
		{% endif %}
	{% endif %}
{% endspaceless %}
{% endmacro %}

{% macro savepercent(percents) %}
{% spaceless %}
	{% if percents is not iterable %}
		({{ percents }}%)
	{% else %}
		{% set max = percents[0] %}
		{% for percent in percents %}
			{% set max = max < percent ? percent : max %}
		{% endfor %}
		{% if max > 0 %}
			({{ max }}%)
		{% endif %}
	{% endif %}
{% endspaceless %}
{% endmacro %}
