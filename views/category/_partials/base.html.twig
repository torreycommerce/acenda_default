{% spaceless %}
{#
##
##  Url Validation
##
#}
{% if app.request.get.limit is not empty and app.request.get.limit is not integer  %}
	{% do app.redirect('/' ~ app.request.url,{},'404') %}
{% endif %}
{% if app.request.get.page is not empty and app.request.get.page is not integer  %}
	{% do app.redirect('/' ~ app.request.url,{},'404') %}
{% endif %}


{#
##
##  Default query and attribute filters
##
#}

{% set default_attributes = default_attributes is not defined ? "acolor,color,category_id,brand,type,gender,size,price,review_score": default_attributes %}
{% if category.facets is not empty %}
	{% set tmpfacets = [] %}
	{% for facet in category.facets %}
		{% set tmpfacets = tmpfacets | merge([facet | lower]) %}
    {% endfor %}
	{% set default_attributes = tmpfacets %}
{% endif %}
{% set limit = app.request.get.limit|default(24) %}

{#
##
##  Sort options
##
#}
{% set sort_options = {
	'Popularity':'product.popularity:-1',
	'Product Name':'name:1',
	'Price: Lowest First':'product.variant.price:1',
	'Price: Highest First':'product.variant.price:-1',
	'Price: Savings %':'product.variant.save_percent:-1',
	'Price: Savings $':'product.variant.save_price:-1',
	'Best Rating':'product.review_score:-1',
	'Color':'product.variant.color:1',
} %}

{% if app.request.get.s is not empty %}
	{% set search_fields = ['name^2','type^2','color^2','brand^2','tags^2','_all'] %}
	{% set sort_options = {'Search Relevance':'_score:-1,product.popularity:-1'}|merge(sort_options) %}
{% endif %}

{% if app.request.get.sf is not empty %}
	{% set search_fields = app.request.get.sf|split(',') %}
{% endif %}

{% set sortBy = sort_options[app.request.get.sort] is defined ? sort_options[app.request.get.sort] : sort_options|first %}
{% set sortByTitle = sort_options[app.request.get.sort] is defined ? app.request.get.sort : sort_options|keys|first %}


{#
##
##  Attribute filter GET parse
##
#}
{% set filter_query = {} %}
{% set filter_request = {} %}
{% if app.request.get.f is defined %}
	{% set filter_request = app.request.get.f %}
	{% for name,action in app.request.get.f %}
		{% if action.range is defined %}
			{% set values = action.range|split(',') %}
			{% if values|length > 1 %}
				{% set value = {'$gte':values|first,'$lte':values|last} %}
				{% set filter_query = filter_query|merge({(name): value})  %}
			{% else %}
				{% set value = {'$gte':values|first|number_format(0,'.','')} %}
				{% set filter_query = filter_query|merge({(name): value})  %}
			{% endif %}
		{% elseif action|join() is not empty %}
			{% do app.redirect('/' ~ app.request.url,{},'404') %}
		{% else %}
			{% set value = {'$in':action|keys} %}
			{% set filter_query = filter_query|merge({(name): value})  %}
		{% endif %}
	{% endfor %}
{% endif %}
{#
##
##  Product API query
##
#}
{% set products = api.get('/catalog', {
						"query":default_query|merge(filter_query),
						"page":app.request.get.page,
						"limit":limit,
						"search":app.request.get.s,
						"search_in":search_fields,
						"sort":sortBy
				  }) %}


{#
##
##  Search Suggestion API query
##
#}
{% set search_suggestion = '' %}
{% set product_suggest = [] %}

{% if products.num_total < 2 and app.request.get.s is not empty %}
	{% set search_filter_keyword = app.request.get.s %}
	
	{% set search_suggestion = api.get('/catalog/suggest', {'search':app.request.get.s})|first %}
	{% if search_suggestion == app.request.get.s %}
		{% set search_suggestion = '' %}
	{% else %}
		{% set product_suggest = api.get('/catalog', {
							"query":default_query|merge(filter_query),
							"page":app.request.get.page,
							"limit":limit,
							"search":search_suggestion,
							"search_in":search_fields,
							"sort":sortBy
					  }) %}
		{% set search_filter_keyword = search_suggestion %}
	{% endif %}
{% endif %}


{#
##
##  Attribute filter API query
##
#}
{% set filters = api.get('/catalog', {
							"id":category_id,
							"query":default_query,
							"search":app.request.get.s,
							"search_in":search_fields,
							"attributes":default_attributes,
							"format":"attributes"
					  }) %}
{#
##
##  Redirection rules (if category or request is not found)
##
#}
{% if products.num_total == 0 and app.request.get.f is not defined and app.request.get.s is not defined and category is not defined %}
	{{app.redirect('/')}}
{% endif %}
{#
##
##  Begin Twig template
##
#}

{% set needFilterCol = 0 %}

{% if categories is not empty %}
	{% set needFilterCol = 1 %}
{% endif %}

{% for name,filter_set in filters %}
	{% if filter_set|length > 1 %}
		{% set needFilterCol = 1 %}
	{% endif %}
{% endfor %}

{% if needFilterCol %}
<div class="row">
	<div class="category-filters col-lg-3">
{% endif %}
		{% if categories is not empty %}
		<div class="list-sub-categories fsd1 d-xsm-none">
			<ul class="list-unstyled fa-fa-gentle">
				<li><span class="sr-only">Other</span> {{ name|default(category.name) }}</li>
				{% for category in categories %}
				<li class="sub-category">
					<i class="fa fa-angle-right"></i><a href="{{app.url}}/category/{{category.slug}}">{{ category.name }}</a>
				</li>
				{% endfor %}
			</ul>
		</div>
		{% endif %}
{% if config.params['catpage_filter_show'] == 'cfsc-as' %}
    {% set cfsc_as = 1 %}
{% elseif config.params['catpage_filter_show'] == 'cfsc-ssoc' %}
    {% set cfsc_ssoc = 1 %}
{% elseif config.params['catpage_filter_show'] == 'cfsc-ac' %}
    {% set cfsc_ac = 1 %}
{% else %}
    {% set cfsc_default = 1 %}
{% endif %}			
	{% set hasFilters = 0 %}
	{% for name,filter_set in filters %}
		{% if filter_set|length > 1 %}
			{% if hasFilters == 0 %}
			<button class="btn btn-block btn-lg btn-default mb-3 d-lg-none" data-toggle="collapse" data-target=".collapse-filters"><i class="fas fa-sliders-h"></i><span>Refine</span></button>
			<div class="collapse collapse-filters d-lg-block fa-fa-balance"><div class="list-group mb-3">
			{% set hasFilters = 1 %}
			{% endif %}
			
			{% set filter_count = filters %}
			{% if filter_set|length %}
				{% if filters|length %}
				{% if attribute(filter_query,name) is defined %}
					{% set current_filter_set = {} %}
					{% for key,value in filter_query %}
						{% if key != name %}
							{% set current_filter_set = current_filter_set|merge({(key):value}) %}
						{% endif %}
					{% endfor %}
				{% else %}
					{% set current_filter_set = filter_query %}
				{% endif %}
				{% if current_filter_set is not empty %}
				{% set filter_count = api.get('/catalog', {
							"query":current_filter_set|merge(default_query),
							"search":app.request.get.s,
							"attributes":name,
							"format":"attributes",
					  }) %}
				{% endif %}
			{% endif %}

            {% set safename = name|replace({'.':'-'})  %}
			{# Seperating each custom left nav into it's own include, ie: color chips for colors, or stars for customer reviews #}
			{% include  '/category/_partials/filter-' ~ (name in ['acolor','product.variant.acolor','color','product.variant.color','product.brand','price','product.variant.price','review_score','category_id'] ? name : 'default') ~ '.html.twig' %}
			{% endif %}
		{% endif %}
		{% if loop.last %}
			{% if hasFilters == 1 %}
				</div></div>
				{% set hasFilters = 2 %}
			{% endif %}
		{% endif %}
	{% endfor %}
{% if needFilterCol %}
	</div>
	{# End category filters #}

	<div class="col-lg-9">
{% endif %}
	    <div class="category-intro">
    		<h1>{% if app.request.get.s is not empty %}
    			Search results for: <i>{{app.request.get.s | e}}</i>
    		{% elseif category.display_name is empty %}
    		    {{ name|default(category.name) }}
    		{% else %}
    		    {{ category.display_name }}
    		{% endif %}</h1>
    		{% if category.description %}
    		<div class="category-description mb-4 g d-none d-md-block">
    			{{ description|default(category.description) }}
    		</div>
    		{% endif %}
    	</div>

		{# Sub Category grid #}
		{% if categories is not empty %}
		<div class="category-grid {% if products.num_total > 0 %} divide mb-4 pb-3{% endif %}">
			<h2 class="sr-only">{% if category.display_name is empty %}{{ name|default(category.name) }} {% else %}{{ category.display_name }} {% endif %}Categories</h2>
			<div class="row{# ifcentercat #}">
				{% for category in categories %}
				{% set catthumb = category.thumbnail|default(app.url_asset ~ '/assets/images/product/image-250x250.gif') %}
				<div class="col-6 col-md-4 mb-4">
					<div class="category">
					    <a class="g" href="{{app.url}}/category/{{category.slug}}">
						    <div class="max-250 mb-3">
								<span class="image-space">
								    <img src="{{catthumb}}" class="img-fluid isd" width="250" height="250" alt="">
								</span>
						    </div>
							<h3 class="category-name">{{ category.name }}</h3>
						</a>
					</div>
				</div>
				{% endfor %}
			</div>
		</div>
		{% endif %}
		{# End Sub Category grid #}
		{# Begin category sorting #}
		{% if products.num_total > 24 %}
		<div class="page-filters divide mb-3">
			<div class="row">                    
				{# Begin search bar #}
				<div class="col-md-4 mb-3">
					<form method="get" onsubmit="document.location.href='{{app.request.getUrl({'page':1,'s':''})}}'+''+$('#category-search').val();return false;">
						<label class="sr-only" for="category-search" id="category-search-label">Search within</label>
						<div class="input-group">
							<input class="form-control typeahead search-autocomplete" id="category-search" aria-labelledby="category-search-label" data-provide="typeahead" autocomplete="off" type="text" name="fs" value="{{app.request.get.s|e}}" placeholder="Search within">
							<span class="input-group-append">
								<button class="btn btn-default" type="submit">
									<i class="fa fa-search"><i class="sr-only">Search within</i></i>
								</button>
							</span>
						</div>
					</form>
				</div>
				{# End search bar #}
				{# Begin paging #}
				<div class="col-md-8 text-center text-md-right">
					<ul class="list-inline">
						<li>
							<div class="btn-group">
								<form class="form-inline">
									<button class="btn btn-default dropdown-toggle" data-toggle="dropdown">
										<span>{{ sortByTitle }}</span><i class="fa fa-angle-down"></i>
									</button>
									<div class="dropdown-menu dropdown-menu-right text-left">
									{% for name,sort in sort_options %}
										{% if sortByTitle == name %}
											<div class="dropdown-item disabled">{{name}}</div>
										{% else %}
											<a class="dropdown-item" href="{{app.request.getUrl({'sort':name,'page':1})}}">{{name}}</a>
										{% endif %}
									{% endfor %}
									</div>
								</form>
							</div>
						</li><li>
							<div class="btn-group">
								<form class="form-inline">
									<button class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span>{{ limit }}</span><i class="fa fa-angle-down"></i>
									</button>
									<div class="dropdown-menu dropdown-menu-right text-left">
									{% for i in 1..4 %}
										{% set limitnum = (i * 12) + 12 %}
										{% if limit == limitnum %}
											<div class="dropdown-item disabled">{{limitnum}}</div>
										{% else %}
											<a class="dropdown-item" href="{{app.request.getUrl({'limit':limitnum,'page':1})}}">{{limitnum}}</a>
										{% endif %}
									{% endfor %}
									</div>
								</form>
							</div>
						</li>
					</ul>
				</div>
				{# End filters #}
			</div>
		</div>
		{% endif %}

		{% if products.num_total == 0 and categories is empty %}
		<p>No products found.</p>
		<div class="alert alert-info">
			<h2>Search Tips</h2>
			<ul>
				<li>Check your spelling.</li>
				<li>Type in a less specific search word or phrase.</li>
			</ul>
		</div>
		{% endif %}

		{% if products.num_total > 0 %}
		<div class="product-grid">
			<h2 class="sr-only">{% if category.display_name is empty %}{{ name|default(category.name) }} {% else %}{{ category.display_name }} {% endif %}Products</h2>
			<div class="products row{# ifcentercat #}">
				{% set collection_ids = [] %}
				{% for row,product in products %}
				{# if product.id not in collection_ids #}
					{% if product.group == 'product' %}
						{% for id in product.product[0].collection_id %}
							{% set collection_ids = collection_ids|merge([id]) %}
						{% endfor %}
					{% else %}
						{% set collection_ids = collection_ids|merge([product.id]) %}
					{% endif %}
					{# Begin product #}
					<div class="{% if needFilterCol %}col-6 col-md-4 mb-5{% else %}col-6 col-md-4 col-lg-3 mb-5{% endif %}">
						{{ prod.gridproduct(config,product) }}
					</div>
					{# End product #}
				{% endfor %}
			</div>
				{% if products|length == limit or app.request.get.page > 1 %}
				
			<div class="text-center text-md-right">
				{{ base.pagination(products.num_total,limit,4) }}
			</div>
			{% endif %}
		</div>
		{% endif %}
		{% if product_suggest is not empty and product_suggest.num_total > 1 %}
		<div class="product-grid">
			{% if search_suggestion is not empty %}
			
			<h2>Results for <strong><i>{{search_suggestion}}</i></strong></h2>
			
			{% endif %}
			<div class="products row{# ifcentercat #}">
				{% set collection_ids = [] %}
				{% for row,product in product_suggest if product.id not in collection_ids %}
					{% if product.group == 'product' %}
						{% for id in product.product[0].collection_id %}
							{% set collection_ids = collection_ids|merge([id]) %}
						{% endfor %}
					{% else %}
						{% set collection_ids = collection_ids|merge([product.id]) %}
					{% endif %}
					{# Begin product #}
					<div class="{% if needFilterCol %}col-6 col-md-4 mb-5{% else %}col-6 col-md-4 col-lg-3 mb-5{% endif %}">
						{{ prod.gridproduct(config,product) }}
					</div>
					{# End product #}
				{% endfor %}
			</div>
				{% if product_suggest|length == limit or app.request.get.page > 1 %}
				
			<div class="text-center text-md-right">
				{{ base.pagination(product_suggest.num_total,limit,4) }}
			</div>
			{% endif %}
		</div>
		{% endif %}
{% if needFilterCol %}
	</div>
</div>
{% endif %}
{% endspaceless %}