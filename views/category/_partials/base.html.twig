{% spaceless %}
{#
##
##  Url Validation
##
#}
{% if app.request.get.limit is not empty and app.request.get.limit is not integer  %}
	{% do app.redirect('/' ~ app.request.url,{},'404') %}
{% endif %}
{% if app.request.get.page is not empty and app.request.get.page is not integer  %}
	{% do app.redirect('/' ~ app.request.url,{},'404') %}
{% endif %}


{#
##
##  Default query and attribute filters
##
#}

{% set default_attributes = default_attributes is not defined ? "color,category_id,brand,type,gender,size,price,review_score": default_attributes %}
{% if category.facets is not empty %}
	{% set tmpfacets = [] %}
	{% for facet in category.facets %}
		{% set tmpfacets = tmpfacets | merge([facet | lower]) %}
    {% endfor %}
	{% set default_attributes = tmpfacets %}
{% endif %}
{% set limit = app.request.get.limit|default(24) %}

{#
##
##  Sort options
##
#}
{% set sort_options = {
	'Popularity':'product.popularity:-1',
	'Product Name':'name:1',
	'Price: Lowest First':'product.variant.price:1',
	'Price: Highest First':'product.variant.price:-1',
	'Price: Savings %':'product.variant.save_percent:-1',
	'Price: Savings $':'product.variant.save_price:-1',
	'Best Rating':'product.review_score:-1',
	'Color':'product.variant.color:1',
} %}

{% if app.request.get.s is not empty %}
	{% set search_fields = ['name^2','type^2','color^2','brand^2','tags^2','_all'] %}
	{% set sort_options = {'Search Relevance':'_score:-1,product.popularity:-1'}|merge(sort_options) %}
{% endif %}

{% if app.request.get.sf is not empty %}
	{% set search_fields = app.request.get.sf|split(',') %}
{% endif %}

{% set sortBy = sort_options[app.request.get.sort] is defined ? sort_options[app.request.get.sort] : sort_options|first %}
{% set sortByTitle = sort_options[app.request.get.sort] is defined ? app.request.get.sort : sort_options|keys|first %}


{#
##
##  Attribute filter GET parse
##
#}
{% set filter_query = {} %}
{% set filter_request = {} %}
{% if app.request.get.f is defined %}
	{% set filter_request = app.request.get.f %}
	{% for name,action in app.request.get.f %}
		{% if action.range is defined %}
			{% set values = action.range|split(',') %}
			{% if values|length > 1 %}
				{% set value = {'$gte':values|first,'$lte':values|last} %}
				{% set filter_query = filter_query|merge({(name): value})  %}
			{% else %}
				{% set value = {'$gte':values|first|number_format(0,'.','')} %}
				{% set filter_query = filter_query|merge({(name): value})  %}
			{% endif %}
		{% elseif action|join() is not empty %}
			{% do app.redirect('/' ~ app.request.url,{},'404') %}
		{% else %}
			{% set value = {'$in':action|keys} %}
			{% set filter_query = filter_query|merge({(name): value})  %}
		{% endif %}
	{% endfor %}
{% endif %}
{#
##
##  Product API query
##
#}
{% set products = api.get('/catalog', {
						"query":default_query|merge(filter_query),
						"page":app.request.get.page,
						"limit":limit,
						"search":app.request.get.s,
						"search_in":search_fields,
						"sort":sortBy
				  }) %}


{#
##
##  Search Suggestion API query
##
#}
{% set search_suggestion = '' %}
{% set product_suggest = [] %}

{% if products.num_total < 2 and app.request.get.s is not empty %}
	{% set search_filter_keyword = app.request.get.s %}
	
	{% set search_suggestion = api.get('/catalog/suggest', {'search':app.request.get.s})|first %}
	{% if search_suggestion == app.request.get.s %}
		{% set search_suggestion = '' %}
	{% else %}
		{% set product_suggest = api.get('/catalog', {
							"query":default_query|merge(filter_query),
							"page":app.request.get.page,
							"limit":limit,
							"search":search_suggestion,
							"search_in":search_fields,
							"sort":sortBy
					  }) %}
		{% set search_filter_keyword = search_suggestion %}
	{% endif %}
{% endif %}


{#
##
##  Attribute filter API query
##
#}
{% set filters = api.get('/catalog', {
							"query":default_query,
							"search":search_filter_keyword,
							"search_in":search_fields,
							"attributes":default_attributes,
							"format":"attributes"
					  }) %}
{#
##
##  Redirection rules (if category or request is not found)
##
#}
{% if products.num_total == 0 and app.request.get.f is not defined and app.request.get.s is not defined and category is not defined %}
	{{app.redirect('/')}}
{% endif %}
{#
##
##  Begin Twig template
##
#}
<div class="row">
	{# Begin category filters #}
	<section class="category-filters fsd1">
		<div class="col-md-3 col-xs-12">
			{% if categories is not empty %}
			<section class="list-sub-categories hidden-sm hidden-xs">
				<ul class="list-unstyled fa-fa-gentle">
					<li class="current-category">{{ name|default(category.name) }}</li>
					{% for category in categories %}
					<li class="sub-category">
						<i class="fa fa-angle-right"></i><a href="{{app.url}}/category/{{category.slug}}">{{ category.name }}</a>
					</li>
					{% endfor %}
				</ul>
			</section>
			{% endif %}
			{% if filters.num_total %}
			<button class="btn btn-block btn-default p hidden-md hidden-lg" data-toggle="collapse" data-target="#collapseFilters"><i class="fa fa-sliders"></i><span>Refine</span></button>
			{% endif %}
			<div class="collapse force-md-lg fa-fa-balance" id="collapseFilters">

			{% for name,filter_set in filters %}
				{% if filter_set|length > 1 %}
					
					{% set filter_count = filters %}
					{% if filter_set|length %}
						{% if filters|length %}
						{% if attribute(filter_query,name) is defined %}
							{% set current_filter_set = {} %}
							{% for key,value in filter_query %}
								{% if key != name %}
									{% set current_filter_set = current_filter_set|merge({(key):value}) %}
								{% endif %}
							{% endfor %}
						{% else %}
							{% set current_filter_set = filter_query %}
						{% endif %}
						{% if current_filter_set is not empty %}
						{% set filter_count = api.get('/catalog', {
									"query":current_filter_set|merge(default_query),
									"search":app.request.get.s,
									"attributes":name,
									"format":"attributes",
							  }) %}
						{% endif %}
					{% endif %}
					<div class="filter">
						{# Seperating each custom left nav into it's own include, ie: color chips for colors, or stars for customer reviews #}
						{% include  '/category/_partials/filter-' ~ (name in ['color','price','review_score','category_id'] ? name : 'default') ~ '.html.twig' %}                    
					</div>
					{% endif %}

				{% endif %}
			{% endfor %}
			</div>
		</div>
	</section>
	{# End category filters #}
	<section class="product-grid">
<style>
.product-grid .color-chips .col-xs-2 {width:20%;}
.product-grid .color-chips .col-xs-2:nth-child(n+6) {display:none;}
</style>
		<div class="col-md-9 col-xs-12">        

			<h1>{% if app.request.get.s is not empty %}
				Search results for: <i>{{app.request.get.s | e}}</i>
			{% elseif category.display_name is empty %}
			    {{ name|default(category.name) }}
			{% else %}
			    {{ category.display_name }}
			{% endif %}</h1>
			{# Begin category description #}
			<div class="section-description hidden-xs">
				{{ description|default(category.description) }}
			</div>

			{# Sub Category grid #}
			{% if categories is not empty %}
			{% set items_per_row = 3 %}
			<section class="category-grid text-center">
				<div class="row c-c">
					{% for category in categories %}
					{# Begin category #}
					<div class="col-sm-{{12 / items_per_row}} col-xs-{{18 / items_per_row}} p-2x">
						<div class="product">
							<div class="max-250 p">
								<a href="{{app.url}}/category/{{category.slug}}">
									<span class="image-space">
										<img onerror="this.src='{{ app.url_asset }}/assets/images/product/image-250x250.gif'" src="{{category.thumbnail}}" class="img-responsive isd" data-image-source="{{category.thumbnail}}">
									</span>
								</a>
							</div>
							<div class="category-name"><a href="{{app.url}}/category/{{category.slug}}">{{ category.name }}</a></div>
						</div>
					</div>
					{# End category #}
					{% endfor %}
				</div>
			</section>
			{% endif %}
			{# End Sub Category grid #}
			{# End category description #}
			{# Begin category sorting #}
			{% if products.num_total > 24 %}
			<div class="page-filters divide p">
				<div class="row">                    
					{# Begin search bar #}
					<div class="col-md-3 col-xs-12 p">
						<div class="search-within">
							<form role="search" method="get" onsubmit="document.location.href='{{app.request.getUrl({'page':1,'s':''})}}'+''+$('#category-search').val();return false;">
								<div class="input-group twitter-typeahead">
									<input class="form-control input-sm typeahead search-autocomplete" id="category-search" data-provide="typeahead" autocomplete="off" type="text" name="fs" value="{{app.request.get.s|e}}" placeholder="Search within">
									<span class="input-group-btn">
										<button class="btn btn-sm btn-default" type="submit">
											<i class="fa fa-search"></i>
										</button>
									</span>
								</div>
							</form>
						</div>
					</div>
					{# End search bar #}
					{# Begin paging #}
					<div class="col-md-4 col-sm-6 col-xs-12 p">
						<div class="pagination-top g text-center">
							{{ base.pagination(products.num_total,limit,5) }}
						</div>
					</div>
					{# End paging #}
					{# Begin filters #}
					<div class="col-md-5 col-sm-6 col-xs-12 p">
						<div class="g text-center txt-md-lg-r">
							<ul class="list-inline">
								<li>
									<div class="btn-group">
										<form class="form-inline">
											<span class="dib small">Sort:</span><button class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" href="#">
												<span>{{ sortByTitle }}</span><i class="fa fa-caret-down"></i>
											</button>
											<ul class="dropdown-menu fsd1 text-left pull-right">
												{% for name,sort in sort_options %}
												<li><a href="{{app.request.getUrl({'sort':name,'page':1})}}">{{name}}</a></li>
												{% endfor %}
											</ul>
										</form>
									</div>
								</li><li>
									<div class="btn-group">
										<form class="form-inline">
											<span class="dib small">View:</span><button class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" href="#"><span>{{ limit }}</span><i class="fa fa-caret-down"></i>
											</button>
											<ul class="dropdown-menu fsd1 pull-right text-left">                                
												<li><a href="{{app.request.getUrl({'limit':24,'page':1})}}">24</a></li>
												<li><a href="{{app.request.getUrl({'limit':36,'page':1})}}">36</a></li>
												<li><a href="{{app.request.getUrl({'limit':48,'page':1})}}">48</a></li>
												<li><a href="{{app.request.getUrl({'limit':60,'page':1})}}">60</a></li>
											</ul>
										</form>
									</div>
								</li>
							</ul>
						</div>                  
					</div>
					{# End filters #}
				</div>
			</div>
			{% endif %}

			{% if products.num_total == 0 and categories is empty %}
			<p>No products found.</p>
			<div class="alert alert-info">
				<h4>Search Tips</h4>
				<ul>
					<li>Check your spelling.</li>
					<li>Type in a less specific search word or phrase.</li>
				</ul>
			</div>
			{% endif %}

			{% set items_per_row = 3 %}
			<section class="products-category text-center">
				<div class="row c-c">
					{% set collection_ids = [] %}
					{% for row,product in products %}
					{# if product.id not in collection_ids #}
						{% if product.group == 'product' %}
							{% for id in product.product[0].collection_id %}
								{% set collection_ids = collection_ids|merge([id]) %}
							{% endfor %}
						{% else %}
							{% set collection_ids = collection_ids|merge([product.id]) %}
						{% endif %}
						{# Begin product #}
						<div class="col-xs-6 col-sm-4 p-2x">
							{{ prod.gridproduct(product) }}
						</div>
						{# End product #}
					{% endfor %}
				</div>
					{% if products|length == limit or app.request.get.page > 1 %}
					
				<div class="p">
					<div class="pagination-bottom g text-center">
						{{ base.pagination(products.num_total,limit,4) }}
					</div>
				</div>
				{% endif %}
			</section>
			{% if product_suggest is not empty and product_suggest.num_total > 1 %}
			<section class="products-category text-center">
				{% if search_suggestion is not empty %}
				
				<p>Results for <strong><i>{{search_suggestion}}</i></strong></p>
				
				{% endif %}
				<div class="row c-c">
					{% set collection_ids = [] %}
					{% for row,product in product_suggest if product.id not in collection_ids %}
						{% if product.group == 'product' %}
							{% for id in product.product[0].collection_id %}
								{% set collection_ids = collection_ids|merge([id]) %}
							{% endfor %}
						{% else %}
							{% set collection_ids = collection_ids|merge([product.id]) %}
						{% endif %}
						{# Begin product #}
						<div class="col-xs-6 col-sm-4 p-2x">
							{{ prod.gridproduct(product) }}
						</div>
						{# End product #}
					{% endfor %}
				</div>
					{% if product_suggest|length == limit or app.request.get.page > 1 %}
					
				<div class="p">
					<div class="pagination-bottom g text-center">
						{{ base.pagination(product_suggest.num_total,limit,4) }}
					</div>
				</div>
				{% endif %}
			</section>
			{% endif %}
			{# End Product list #}
		</div>
	</section>
</div> {# End Row #}
{% endspaceless %}
